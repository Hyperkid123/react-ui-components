export const widgetsExpectedResult = {
  title: 'Widgets',
  fields: [{
    autoFocus: false,
    name: 'stringFormats',
    validate: [],
    key: 'stringFormats',
    title: 'String formats',
    component: 'sub-form',
    fields: [{
      initialKey: 'email',
      description: 'Insert your email address',
      helperText: 'must be in email format',
      validate: [{
        type: 'required-validator',
      }],
      name: 'stringFormats.email',
      component: 'text-field',
      type: 'email',
      label: 'email',
      dataType: 'string',
      autoFocus: false,
    }, {
      name: 'stringFormats.uri',
      label: 'uri',
      initialKey: 'uri',
      component: 'text-field',
      type: 'uri',
      dataType: 'string',
      validate: [],
      autoFocus: false,
    }],
  }, {
    autoFocus: false,
    name: 'boolean',
    title: 'Boolean field',
    validate: [],
    key: 'boolean',
    component: 'sub-form',
    fields: [{
      name: 'boolean.default',
      initialKey: 'default',
      title: 'checkbox (default)',
      label: 'checkbox (default)',
      validate: [],
      autoFocus: false,
      description: 'This is the checkbox-description',
      component: 'checkbox-field',
      type: 'checkbox',
      dataType: 'boolean',
    }, {
      name: 'boolean.radio',
      initialKey: 'radio',
      title: 'radio buttons',
      label: 'radio buttons',
      validate: [],
      autoFocus: false,
      description: 'This is the radio-description',
      component: 'radio-field',
      type: 'radio',
      dataType: 'boolean',
      options: [{
        label: 'Yes',
        value: true,
      }, {
        label: 'No',
        value: false,
      }],
    }, {
      autoFocus: false,
      name: 'boolean.select',
      initialKey: 'select',
      title: 'select box',
      label: 'select box',
      component: 'select-field',
      type: 'boolean',
      dataType: 'boolean',
      validate: [{
        type: 'required-validator',
      }],
      isRequired: true,
      description: 'This is the select-description',
      options: [{
        label: 'Please Choose',
      }, {
        value: true,
        label: 'Yes',
      }, {
        value: false,
        label: 'No',
      }],
    }],
  }, {
    autoFocus: false,
    name: 'string',
    title: 'String field',
    validate: [],
    component: 'sub-form',
    key: 'string',
    fields: [{
      autoFocus: false,
      validate: [],
      name: 'string.default',
      initialKey: 'default',
      type: 'text',
      dataType: 'string',
      component: 'text-field',
      title: 'text input (default)',
      label: 'text input (default)',
    }, {
      autoFocus: false,
      validate: [],
      name: 'string.textarea',
      initialKey: 'textarea',
      rows: 5,
      type: 'string',
      dataType: 'string',
      component: 'textarea-field',
      title: 'textarea',
      label: 'textarea',
    }, {
      autoFocus: false,
      validate: [],
      name: 'string.color',
      initialKey: 'color',
      type: 'color',
      dataType: 'string',
      component: 'text-field',
      title: 'color picker',
      label: 'color picker',
      default: '#151ce6',
    }],
  }, {
    autoFocus: false,
    name: 'secret',
    type: 'hidden',
    dataType: 'string',
    component: 'text-field',
    default: 'I\'m a hidden string.',
  }, {
    autoFocus: false,
    validate: [],
    name: 'disabled',
    type: 'text',
    dataType: 'string',
    component: 'text-field',
    title: 'A disabled field',
    label: 'A disabled field',
    default: 'I am disabled.',
    isDisabled: true,
  }, {
    autoFocus: false,
    validate: [],
    name: 'readonly',
    type: 'text',
    dataType: 'string',
    component: 'text-field',
    title: 'A readonly field',
    label: 'A readonly field',
    default: 'I am read-only.',
    isReadOnly: true,
  }, {
    autoFocus: false,
    validate: [],
    name: 'widgetOptions',
    type: 'text',
    dataType: 'string',
    component: 'text-field',
    title: 'Custom widget with options',
    label: 'Custom widget with options',
    default: 'I am yellow',
  }, {
    autoFocus: false,
    validate: [],
    name: 'selectWidgetOptions',
    type: 'string',
    dataType: 'string',
    component: 'select-field',
    title: 'Custom select widget with options',
    label: 'Custom select widget with options',
    options: [{
      label: 'Please Choose',
    }, {
      value: 'foo',
      label: 'Foo',
    }, {
      value: 'bar',
      label: 'Bar',
    }],
  }],
};


export const arraySchemaResult = {
  fields: [{
    title: 'A list of strings',
    key: 'listOfStrings',
    component: 'field-array',
    itemDefault: 'bazinga',
    validate: [],
    fields: [{
      component: 'text-field',
      dataType: 'string',
      type: 'text',
      validate: [],
      initialKey: 'items',
      name: 'listOfStrings.items',
      default: ['bazinga'],
      autoFocus: false,
    }],
  }, {
    key: 'multipleChoicesList',
    title: 'A multiple choices list',
    name: 'multipleChoicesList',
    label: 'A multiple choices list',
    component: 'checkbox-field',
    dataType: 'string',
    validate: [],
    options: [{
      label: 'foo',
      value: 'foo',
    }, {
      value: 'bar',
      label: 'bar',
    }, {
      value: 'fuzz',
      label: 'fuzz',
    }, {
      value: 'qux',
      label: 'qux',
    },
    ],
    type: 'checkbox',
  }, {
    key: 'fixedItemsList',
    title: 'A list of fixed items',
    component: 'fixed-list',
    fields: [{
      name: 'fixedItemsList.items.0',
      dataType: 'string',
      label: 'A string value',
      component: 'textarea-field',
      default: 'lorem ipsum',
      validate: [],
    }, {
      name: 'fixedItemsList.items.1',
      dataType: 'boolean',
      label: 'a boolean value',
      validate: [],
      component: 'select-field',
      options: [{
        disabled: true,
        label: 'Please Choose',
      }, {
        label: 'Yes',
        value: true,
      }, {
        label: 'No',
        value: false,
      }],
    }],
    additionalItems: {
      key: 'fixedItemsList.additionalItems',
      validate: [],
      component: 'field-array',
      fields: [{
        initialKey: 'items',
        dataType: 'number',
        label: 'Additional item',
        component: 'text-field',
        type: 'number',
        validate: [],
        autoFocus: false,
        name: 'fixedItemsList.additionalItems.items',
        title: 'Additional item',
      }],
    },
  }, {
    key: 'minItemsList',
    component: 'field-array',
    title: 'A list with a minimal number of items',
    validate: [{
      type: 'min-items-validator',
      treshold: 3,
    }],
    fields: [{
      label: 'name',
      initialKey: 'name',
      name: 'minItemsList.name',
      dataType: 'string',
      default: 'Default name',
      component: 'text-field',
      type: 'text',
      validate: [],
      autoFocus: false,
    }],
    itemDefault: {
      name: 'Default name',
    },
  }, {
    key: 'defaultsAndMinItems',
    component: 'field-array',
    title: 'List and item level defaults',
    itemDefault: 'unidentified',
    validate: [{
      type: 'min-items-validator',
      treshold: 5,
    }],
    fields: [{
      dataType: 'string',
      component: 'text-field',
      type: 'text',
      validate: [],
      initialKey: 'items',
      name: 'defaultsAndMinItems.items',
      default: ['unidentified'],
      autoFocus: false,
    }],
  }, {
    key: 'nestedList',
    name: 'nestedList',
    title: 'Nested list',
    component: 'field-array',
    fields: [{
      title: 'Inner list',
      component: 'field-array',
      validate: [],
      key: 'nestedList',
      fields: [{
        dataType: 'string',
        component: 'text-field',
        validate: [],
        type: 'text',
        initialKey: 'items',
        name: 'nestedList.items',
        default: 'lorem ipsum',
        autoFocus: false,
      }],
    }],
  }, {
    component: 'field-array',
    key: 'unorderable',
    title: 'Unorderable items',
    validate: [],
    fields: [{
      dataType: 'string',
      component: 'text-field',
      type: 'text',
      validate: [],
      initialKey: 'items',
      name: 'unorderable.items',
      default: ['lorem ipsum'],
      autoFocus: false,
    }],
    itemDefault: 'lorem ipsum',
  }, {
    key: 'unremovable',
    title: 'Unremovable items',
    component: 'field-array',
    validate: [],
    fields: [{
      dataType: 'string',
      component: 'text-field',
      type: 'text',
      validate: [],
      name: 'unremovable.items',
      initialKey: 'items',
      default: ['lorem ipsum'],
      autoFocus: false,
    }],
    itemDefault: 'lorem ipsum',
  }, {
    key: 'noToolbar',
    title: 'No add, remove and order buttons',
    component: 'field-array',
    validate: [],
    fields: [{
      dataType: 'string',
      component: 'text-field',
      type: 'text',
      validate: [],
      name: 'noToolbar.items',
      initialKey: 'items',
      default: ['lorem ipsum'],
      autoFocus: false,
    }],
    itemDefault: 'lorem ipsum',
  }, {
    key: 'fixedNoToolbar',
    title: 'Fixed array without buttons',
    component: 'fixed-list',
    fields: [{
      dataType: 'number',
      name: 'fixedNoToolbar.items.0',
      label: 'A number',
      default: 42,
      component: 'text-field',
      type: 'number',
      validate: [],
    }, {
      name: 'fixedNoToolbar.items.1',
      dataType: 'boolean',
      label: 'A boolean',
      component: 'checkbox-field',
      type: 'checkbox',
      validate: [],
      default: false,
    }],
    additionalItems: {
      component: 'field-array',
      key: 'fixedNoToolbar.additionalItems',
      validate: [],
      fields: [{
        dataType: 'string',
        component: 'text-field',
        label: 'A string',
        title: 'A string',
        initialKey: 'items',
        name: 'fixedNoToolbar.additionalItems.items',
        autoFocus: false,
        default: 'lorem ipsum',
        type: 'text',
        validate: [],
      }],
    },
  }],
};
